package MainPackage;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author emprendedor01
 */
import controlador.controllerBD;
import java.sql.*;
import javax.swing.*;
import java.time.*;
import java.util.Calendar;
import javafx.util.converter.LocalTimeStringConverter;
     
public class MainForm extends javax.swing.JFrame {
    public  controllerBD contr;
    public static ResultSet rs;
    public static boolean hayconeccion=false;
    private String codigoT="";
    private final int tamanio=30;
    public int jard = 2;
    /*
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        hayconeccion=conectarseBD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        passField = new javax.swing.JPasswordField();
        btnAbrirReg = new javax.swing.JButton();
        radioEntrada = new javax.swing.JRadioButton();
        radioSalida = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("REGISTRO DEL PERSONAL");

        jLabel2.setText("Marcar");

        progressBar.setForeground(new java.awt.Color(51, 255, 51));
        progressBar.setMaximum(30);
        progressBar.setToolTipText("");

        passField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passFieldFocusGained(evt);
            }
        });
        passField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(passField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnAbrirReg.setText("Registrar");
        btnAbrirReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirRegActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioEntrada);
        radioEntrada.setSelected(true);
        radioEntrada.setText("ENTRADA");
        radioEntrada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                radioSalidaFocusGained(evt);
            }
        });

        buttonGroup1.add(radioSalida);
        radioSalida.setText("SALIDA");
        radioSalida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                radioSalidaFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAbrirReg))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioSalida)
                            .addComponent(radioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnAbrirReg)))
                .addGap(18, 18, 18)
                .addComponent(radioEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioSalida)
                .addContainerGap(103, Short.MAX_VALUE))
        );

        radioEntrada.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void passFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passFieldKeyTyped
      int coun=countCodigo();
      if(coun ==this.tamanio)
      {
          System.out.println(codigoT);
          boolean ident = seIdentifico();
          if(ident)
          {
              //JOptionPane.showMessageDialog(null,"Se encontro: ");
          }
          else
          {
              JOptionPane.showMessageDialog(null, "No registrado...");
          }
      }
    }//GEN-LAST:event_passFieldKeyTyped

    private void passFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passFieldFocusGained
       passField.setText("");
    }//GEN-LAST:event_passFieldFocusGained

    private void btnAbrirRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirRegActionPerformed
       RegistrarDialog reg = new RegistrarDialog(this,false);
       reg.setVisible(true);
    }//GEN-LAST:event_btnAbrirRegActionPerformed

    private void radioSalidaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radioSalidaFocusGained
        passField.requestFocusInWindow();
    }//GEN-LAST:event_radioSalidaFocusGained

    /*********************************************
     * METODOS CUSTOMIZADOS*/
    
    //METODO PARA IDENTIFICAR EL STRING EN LA BASE DE DATOS
    public boolean conectarseBD()
    {
         try
        {
            contr = new controllerBD();
            contr.crearConexion();
            JOptionPane.showMessageDialog(null, "Se conecto a la base de datos");
            return true;
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Error al conectarse");
            return false;
        }
    }
    public boolean seIdentifico()
    {
        if(hayconeccion ==true)
        {
            System.out.println("hay coneccion");
            try
            {
                if(radioEntrada.isSelected())
                {
                    ResultSet rs = contr.mandarSQL("select * from Personas where codigo='"+codigoT+"'");
                    while(rs.next())
                    {
                        LocalTime ahoraT = LocalTime.now();
                        Calendar cal = Calendar.getInstance();
                        int hora = ahoraT.getHour();
                        int minutos = ahoraT.getMinute();
                        int segundos = ahoraT.getSecond();

                        String day = Integer.toString(cal.get(Calendar.DATE));
                        String month = Integer.toString(cal.get(Calendar.MONTH)+1);
                        String year = Integer.toString(cal.get(Calendar.YEAR));

                        String date = hora+":"+minutos+":"+segundos;
                        String fecha = day+"/"+month+"/"+year;
                        System.out.println(date);
                        System.out.println(fecha);
                        int code_Persona = rs.getInt(1);
                       // contr.ejecutarStatement("insert into Fechas (Id_persona,Fecha_Hora_Int,Fecha_Hora_out) values ('"+code_Persona+"','"+date+"','"+date+"')");
                        //System.out.println(rs.getString(2));
                        JOptionPane.showMessageDialog(null,"REGISTRO DE ENTRADA\n"+"Se encontro: "+ rs.getInt(1)
                        +"\n"+"Nombre: "+rs.getString(3)+"\n"+"DNI: "+ rs.getString(4)+"\n"
                                + "Hora:"+ date+"\nFecha: "+fecha);
                        System.out.println("encontro");

                        progressBar.setValue(0);
                        contr.ejecutarStatement("insert into Fechas_in (Id_persona,Fecha_Hora_Int) values ('"+code_Persona+"','"+date+"')");
                        return true;     
                        //System.out.println(rs.getString(1));
                    }
                }
                else if(radioSalida.isSelected())
                {
                    System.out.println("Ejecutando salida ...");
                    boolean maked = marcarSalida();
                    return maked;
                }
                System.out.println("no encontro");
                progressBar.setValue(0);
                return false;
            }
            catch(SQLException ex)
            {
                System.out.println("error: "+ex.toString());
                return false;
            }
        }
        else
        {
            System.out.println("no hay coneccion");
            return false;
        }
    }
    
    
    public boolean marcarSalida() throws SQLException
    {
        LocalTime ahoraT = LocalTime.now();
        Calendar cal = Calendar.getInstance();
        int hora = ahoraT.getHour();
        int minutos = ahoraT.getMinute();
        int segundos = ahoraT.getSecond();
                   
        String day = Integer.toString(cal.get(Calendar.DATE));
        String month = Integer.toString(cal.get(Calendar.MONTH)+1);
        String year = Integer.toString(cal.get(Calendar.YEAR));
                   
        String date = hora+":"+minutos+":"+segundos;
        String fecha = day+"/"+month+"/"+year;
        System.out.println(date);
        System.out.println(fecha);
        
        ResultSet rs = contr.mandarSQL("select * from Personas where codigo='"+codigoT+"'");
        while(rs.next())
        {
            int id_persona = rs.getInt(1);
            JOptionPane.showMessageDialog(null,"REGISTRO DE SALIDA\n"+"Se encontro: "+ rs.getInt(1)
                            +"\n"+"Nombre: "+rs.getString(3)+"\n"+"DNI: "+ rs.getString(4)+"\n"
                                    + "Hora:"+ date+"\nFecha: "+fecha);
            rs = contr.mandarSQL("select Id_Fecha_in from Fechas_in where Id_persona='"+id_persona+"'");

            int id_fechas_last=0;
            while(rs.last())
            {
                id_fechas_last=rs.getInt(1);
                System.out.println("Revisando fechas ..."+id_fechas_last);
                contr.ejecutarStatement("insert into Fechas_out (Fecha_out,Id_fecha_in) values ('"+date+"','"+id_fechas_last+"')");
                return true;
            }
        }
        return false;
        
    }
    
    public int countCodigo()
    {
        
        String texto = passField.getText();
        int tam= texto.length();
        progressBar.setValue(tam);
      
        if(tam==this.tamanio)
        {
            codigoT=texto;
        }
        return tam;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirReg;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField passField;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JRadioButton radioEntrada;
    private javax.swing.JRadioButton radioSalida;
    // End of variables declaration//GEN-END:variables
}
